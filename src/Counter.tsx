import React from "react";
// import React, { useRef } from "react";
import { useCounterStore } from "./state";

/**
 * We are having two components here in order to illustrate how
 * to use the Zustand state management via the hook, generated by
 * its `create` function.
 */
const Count: React.FC = () => {
  const count = useCounterStore((state) => state.count);

  return (
    <h2>
      Count is <b>{count}</b>
    </h2>
  );
};

const Counter: React.FC = () => {
  // const inputRef = useRef<HTMLInputElement>(null);
  const increment = useCounterStore((state) => state.increment);
  const decrement = useCounterStore((state) => state.decrement);

  return (
    <div className="counter-container">
      <Count />

      <div className="button-container">
        <div className="button-row">
          <button onClick={() => increment()}>Increment</button>
          <button onClick={() => decrement()}>Decrement</button>
        </div>
        {/* <div className="button-row">
          <input id="amount" type="number" ref={inputRef} defaultValue={10} />
        </div>
        <div className="button-row">
          <button onClick={() => {}}>Increment by amount</button>
          <button onClick={() => {}}>Increment by amount Async</button>
        </div> */}
      </div>
    </div>
  );
};

export default Counter;
